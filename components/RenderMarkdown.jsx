// --- components/RenderMarkdown.jsx ---
// Purpose: A basic React component designed to render simple Markdown, specifically
// converting text surrounded by double asterisks (**) into bold text using <strong> tags.
// For more complex Markdown features (like lists, links, italics, code blocks),
// consider using a dedicated library such as 'react-markdown'.

import React from 'react';

/**
 * Helper function to perform the text replacement.
 * It finds all occurrences of text enclosed in double asterisks and wraps them
 * in HTML <strong> tags.
 *
 * @param {string} text - The input string potentially containing **bold** markdown.
 * @returns {{ __html: string }} - An object suitable for React's dangerouslySetInnerHTML prop.
 */
function renderSimpleBold(text) {
  // If the input text is null, undefined, or empty, return an object with an empty string.
  if (!text) {
    return { __html: '' };
  }

  // Use String.prototype.replace with a regular expression:
  // - \*\* matches the opening double asterisk.
  // - (.*?) captures any characters between the asterisks non-greedily.
  //   - '.' matches any character except newline.
  //   - '*' means zero or more times.
  //   - '?' makes the '*' non-greedy (matches the shortest possible string).
  // - \*\* matches the closing double asterisk.
  // - 'g' flag ensures all occurrences are replaced, not just the first.
  // The captured group (.*?) is referenced as $1 in the replacement string.
  const html = text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');

  // Return the result in the format required by dangerouslySetInnerHTML.
  // WARNING: While generally unsafe, dangerouslySetInnerHTML is acceptable here because
  // we are strictly controlling the transformation and not injecting arbitrary user input directly.
  // We are only adding <strong> tags.
  return { __html: html };
}

/**
 * The React component that takes text and an optional className,
 * renders it within a <p> tag, applying the simple bold formatting.
 *
 * @param {{ text: string, className?: string }} props - Component props.
 * @param {string} props.text - The text string to render, potentially with **bold** markdown.
 * @param {string} [props.className=''] - An optional CSS class name to apply to the <p> tag.
 */
function RenderMarkdown({ text, className = '' }) {
  // If no text is provided, render nothing.
  if (!text) {
    return null;
  }

  // Render the text inside a paragraph tag (<p>).
  // Apply the className if provided. Using '|| undefined' prevents adding an empty class attribute (class="").
  // Use dangerouslySetInnerHTML to render the HTML generated by renderSimpleBold.
  return <p className={className || undefined} dangerouslySetInnerHTML={renderSimpleBold(text)} />;
}

export default RenderMarkdown;
